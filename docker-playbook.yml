---
- hosts: all
  gather_facts: true
  roles:
    - role: geerlingguy.docker
      become: true

  tasks:
    - name: Check if already listening to tcp 
      shell: 
        cmd: grep -nrw -e '-H tcp://0.0.0.0:2375' /etc/systemd/system/docker.service
      ignore_errors: true
      register: check_tcp_listener

    - name: Set listening on tcp
      become: true    
      ansible.builtin.replace:
        path: /lib/systemd/system/docker.service
        regexp: '(-H fd:\/\/)'
        replace: '-H fd:// -H tcp://0.0.0.0:2375'
      when: check_tcp_listener.stdout == ''

    - name: Reload and restart docker daemon
      become: true    
      ansible.builtin.systemd: 
        name: docker
        daemon_reload: true
        state: restarted       

    - name: Add user 'vagrant' to group 'docker'
      become: true    
      ansible.builtin.user:
        name: 'vagrant'
        groups: docker
        append: yes 

    - name: Copy authorized keys
      ansible.builtin.copy:
        src: ~/.ssh/id_rsa.pub
        dest: ~/.ssh/authorized_keys.host

    - name: Check if authorized key already added
      command: grep -f ~/.ssh/authorized_keys.host ~/.ssh/authorized_keys
      changed_when: False
      register: auth_keys_out
      ignore_errors: true

    - name: Append to authorized key
      command: /bin/bash -c "cat ~/.ssh/authorized_keys.host >> ~/.ssh/authorized_keys"
      when: auth_keys_out.stdout == ''

    - name: create docker config folder
      ansible.builtin.file:
        path: ~/.docker
        state: directory 

    - name: setup docker proxy
      ansible.builtin.copy: 
        dest: ~/.docker/config.json
        content: |
          {
            "proxies":
            {
              "default":
              {
                "httpProxy": "{{ proxy }}",
                "httpsProxy": "{{ proxy }}",
                "noProxy": "{{ no_proxy }}"
              }
            }
          }